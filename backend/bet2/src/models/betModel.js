const mongoose=require("mongoose");const Schema=mongoose.Schema;const generate=require("nanoid/non-secure/generate");const betSchema=new Schema({userName:{type:String,},userId:{type:String,unique:true,default:()=>generate("123456789ABCDEF",7),},payed:{type:Boolean,default:false,},status:{type:String,enum:["pending","win","loose"],default:"pending",},tookPrizeMoney:{type:Boolean,default:false,},placedMoney:{type:Number,min:20,},prizeMoney:{type:Number,max:25000,},totalOdd:{type:Number,},momentDate:String,momentDateOnly:String,game:[{title:{type:String,req:true,},matchId:{type:mongoose.Schema.ObjectId,ref:"Match",},OddId:{type:mongoose.Schema.ObjectId,ref:"Odd",},prediction:{type:String,req:true,},choice:{type:String,req:true,},odd:{type:Number,req:true,},},],},{timestamps:true,toJson:{virtuals:true,},toObj:{virtuals:true,},});betSchema.pre(/^find/,function(next){this.populate({path:"game.leagueName",select:"-__v",});next();});betSchema.methods.calculatePrizeMoney=function(){this.prizeMoney=this.totalOdd*this.placedMoney;return this.prizeMoney;};module.exports=mongoose.model("Bets",betSchema);